stages:
  - start-vm
  - vm-setup
  - test
  - vm-deploy
  - deploy
  - docker-build

# Based on https://gitlab.cern.ch/gitlabci-examples/build_docker_image/-/blob/master/.gitlab-ci.yml
make-docker-image:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: docker-build
  needs: []
  script:
    - |
      if [[ $CI_COMMIT_BRANCH == "main" ]]; then
        export IMAGE_DESTINATION=gitlab-registry.cern.ch/adaptiveperf/adaptiveperf:latest
      else
        export IMAGE_DESTINATION=gitlab-registry.cern.ch/adaptiveperf/adaptiveperf:$CI_COMMIT_BRANCH
      fi
    # Prepare Kaniko configuration file
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_DEPLOY_USER\",\"password\":\"$CI_DEPLOY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    # Build and push the image from the Dockerfile at the root of the project.
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $IMAGE_DESTINATION --build-arg "JOBS=12"
    # Print the full registry path of the pushed image
    - echo "Image pushed successfully to ${IMAGE_DESTINATION}"

start-vm:
  tags:
    - gentoo-vm-host
  stage: start-vm
  script:
    - |
      if ! sudo virsh start gentoo; then
        sudo virsh shutdown gentoo
        sudo virsh event gentoo --event lifecycle
        sleep 1
        sudo virsh start gentoo
      fi

vm-setup:
  tags:
    - gentoo-vm
  stage: vm-setup
  script:
    - cd $CI_PROJECT_DIR
    - bash ci/vm_setup.sh

vm-test:
  tags:
    - gentoo-vm
  stage: test
  script:
    - cd $CI_PROJECT_DIR
    - bash ci/vm_test.sh

vm-deploy:
  tags:
    - gentoo-vm
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  stage: vm-deploy
  script:
    - cd $CI_PROJECT_DIR
    - bash ci/vm_deploy.sh

shutdown-vm:
  tags:
    - gentoo-vm-host
  stage: deploy
  script:
    - |
      if ! sudo virsh shutdown gentoo; then
        if sudo virsh list | grep gentoo; then
          exit 1
        fi
      else
        sudo virsh event gentoo --event lifecycle
      fi

make-vm-image:
  tags:
    - gentoo-vm-host
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs: ["shutdown-vm"]
  before_script:
    - echo $KERBEROS_PASSWORD | kinit ${KERBEROS_USER}@CERN.CH
  script:
    - TMPDIR=/data/gitlab-runner/tmp virt-sparsify --compress /data/gitlab-runner/gentoo.qcow2 $CI_PROJECT_DIR/adaptiveperf.qcow2
    - guestmount -a $CI_PROJECT_DIR/adaptiveperf.qcow2 -m /dev/sda2 /data/gitlab-runner/mnt
    - rm -rf /data/gitlab-runner/mnt/etc/gitlab-runner/config.toml /data/gitlab-runner/mnt/opt/gitlab-runner/* /data/gitlab-runner/mnt/home/profiling/.bash_history && echo "gentoo-adaptiveperf-vm" > /data/gitlab-runner/mnt/etc/hostname
    - guestunmount /data/gitlab-runner/mnt
    - xrdcp $CI_PROJECT_DIR/adaptiveperf.qcow2 root://eosuser.cern.ch/$WEB_STORAGE/adaptiveperf-$CI_COMMIT_SHORT_SHA.qcow2

deploy-to-syclops-gentoo-profiling:
  tags:
    - gentoo-profiling
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - cd $CI_PROJECT_DIR
    - ./build.sh
    - echo -n "y" | sudo ./install.sh
